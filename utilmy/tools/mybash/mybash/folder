#!/bin/bash
USAGE=$(cat <<-END
     Perform various useful operations on the folders/directories


     folder size        ~/mypathXYZ             #### Print folder size in Gb
     folder topfile     mypathXYZ/    20        #### Print 20 biggest size files
     folder recentifle  ~/mypathXYZ   10        #### Print recently modified files   

                                
     folder backup   mypathXYZ/                           #### copied into default path ~/zarchive/mypath_suffix_20230202/
     folder backup   ~/mypathXYZ   ~/mypath_target/
     

END
)

#### Global Config. #################################
# set -x  # Output commands being run.
set -e  # Exit on error.


#### Global vars ###################################
FUNAME=`basename "$0"`
YMD=$(date '+%Y%m%d')



### Input Params and Defaults ##################################
[ $# -eq 0 ] &&    echo $UUSAGE && exit         ### No input print doc
ddo="size"  &&  [ -z $1 ] &&     ddo=$1         ### print folder size
ppath="$PWD"  &&  [ -z $2 ] &&     ppath=$2     ### current path as default


### Core ###########################################
if [[ "$ddo" = size ]]; then
      df -h $ppath
      echo  # Newline
      du -h --max-depth=5 $ppath / |\
         /bin/grep '[0-9]G\>' |\
         /usr/bin/sort -hr 



exit 0
elif [[ "$ddo" = topfile ]]; then
      ssize=20    &&  [ -z $3 ] &&     ssize=$3

      df -H $ppath
      echo  # Newline
      du -a . --exclude='${HOME}/zdropbox' |\
         sort -n -r |\
         head -n $ssize  



exit 0
elif [[ "$ddo" = recentfile ]]; then
      ### recent file modified files + created
      nfile=20    &&  [ -z $3 ] &&     nfile=$3

      if [[ "$OSTYPE" == "darwin"* ]]; then
         ### MacoS
         find $ppath -type f -exec stat -lt "%F %T" {} \+ | cut -d' ' -f6- | sort -n | tail -n $nfile
      else 
          ### Linux 
          find $ppath -type f -printf "%T@ %p\n" | sort -n | cut -d' ' -f 2- | tail -n $nfile

      fi



elif [[ "$ddo" =  backup ]]; then
      ### backup quickly currently folder, skip big files.
      pathbase = "suffix of path_$YMD"
      dir_to="~/zbackup/$pathbase"    &&  [ -z $3 ] &&     dir_to=$3

      rsync -ar $ppath  dir_to





exit 0
elif [[ "$ddo" = recentfile ]]; then





else
   echo $USAGE
fi












