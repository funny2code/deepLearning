#!/bin/bash

### Global vars ###################################

## Acronyms:
# spath 	: sorce path
# dpath 	: destination path
# maxc 		: maximum count
# maxs		: maximum size
# tfile		: topfile
# rfile		: recentfile
# csfile	: copysmallfile

USAGE=$(cat << END
     Perform various useful operations on the folders/directories

     folder
     folder size	spath/								#### Print folder size in Gb			
     folder tfile	spath/ 	20		"{excludedirs}"		#### Print 20 biggest size files		
     folder rfile	spath/ 	10							#### Print recently modified files
                                
     folder backup	spath/	200m						#### copied into default path ~/zarchive/mypath_suffix_20230202/
     folder backup	spath/	dpath/	200m				#### copied from mypathXYZ to mypath_target/

     folder csfile	spath/	dpath/	-1000c				#### copy files recursively, filter big files
END
)

FUNAME=`basename "$0"`
YMD=$(date '+%Y%m%d')
pathbase="backup_$YMD"
dpath="~/zbackup/$pathbase"
LIST=("size" "tfile" "rfile" "backup" "csfile")
maxc=20
maxs=200m


#### Import utils #################################
source utils/util_stable.sh



### Input Params and Defaults ##################################
[ $# -eq 0 ] && echo -e "$USAGE" && exit 0											###  No input, print doc
[[ " ${LIST[*]} " =~ " $1 " ]] && task=$1 || task="size" 							###  Task, default: size
[[ -d $2 ]] && spath=$2 || { echo -e "### This is PWD ###"; spath=$PWD; }			###  Path, default: current path
[[ -d $3 ]] && dpath=$3 || [[ $3 == ?(-)+([0-9]) ]] && maxc=$3 || maxs=$3 			###  $3 : path, max count or max size


### Global Config. #################################
# set -x  # Output commands being run.
set -e  # Exit on error.

### Core ###########################################

case $task in
      ### Printing Information
	"size")
		df -H $spath
    	      echo  # Newline
		du -s -h $spath
      ;;

	"tfile")
		[ ! -z $4 ] && eexcludedirs=$4 || eexcludedirs="0_BACKUP"

    	df -H $spath
    	echo  # Newline
		
		echo $temp

    	while read -r str; do echo $str ; done < \
			<( du -a $spath --exclude=$temp$eexcludedirs | sort -n -r | head -n $maxc | awk '{print $2}' )
	;;
	
	
	"rfile")
		### recent file modified files + created
		
		if [[ "$OSTYPE" == "darwin"* ]]; then
			### MacoS
			while read -r str; do echo "$( date -r $str +'%F %T') $str " ; done < \
				<( find $spath -type f -exec stat -lt "%F %T" {} \+ | cut -d' ' -f6- | sort -n | tail -n $maxc )
			
		else
			while read -r str; do echo "$( date -r $str +'%F %T') $str " ; done < \
				<( find $spath -type f -printf "%T %p\n" | sort -n | cut -d' ' -f2- | tail -n $maxc )
		fi
      ;;

    	### Performing Operation
	"backup")
		### backup quickly currently folder, skip big files.

		rsync -a --max-size=$maxs $spath $dpath
	;;

	"csfile")

        ### Add File filtering
        # echo "find $ppath -mindepth 1 -maxdepth 10 -type f -size $max_file_size -exec cp -t $dir_to"
        cmd=$( find $spath -mindepth 1 -maxdepth 10 -type f -size $maxs -exec cp -t $dpath )

        printf '%q ' "${cmd[@]}"
        "${cmd[@]}"   ### Execute the command
	;;

	*)
		echo -e "$USAGE"
    ;;
esac

exit 0



### https://stackoverflow.com/questions/2005192/how-to-execute-a-bash-command-stored-as-a-string-with-quotes-and-asterisk
# cmd=( mysql AMORE -u username -ppassword -h localhost -e "SELECT  host  FROM amoreconfig" )
# printf 'Proposing to run: '
# printf '%q ' "${cmd[@]}"
# printf '\n'

